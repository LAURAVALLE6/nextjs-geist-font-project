{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/contexts/auth-context.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport Cookies from \"js-cookie\"\n\ninterface User {\n  email: string\n}\n\ninterface AuthContextType {\n  user: User | null\n  login: (email: string, password: string) => Promise<void>\n  logout: () => void\n  isLoading: boolean\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const router = useRouter()\n  const [user, setUser] = useState<User | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuth = async () => {\n      try {\n        const authCookie = Cookies.get(\"auth\")\n        if (authCookie) {\n          const userData = JSON.parse(authCookie)\n          setUser(userData)\n        }\n      } catch (error) {\n        console.error(\"Auth check failed:\", error)\n        Cookies.remove(\"auth\")\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    checkAuth()\n  }, [])\n\n  const login = async (email: string, password: string) => {\n    try {\n      // TODO: Implement actual authentication\n      // For demo, we'll just set a cookie\n      const user = { email }\n      Cookies.set(\"auth\", JSON.stringify(user), { expires: 7 }) // Expires in 7 days\n      setUser(user)\n      router.push(\"/dashboard\")\n    } catch (error) {\n      console.error(\"Login failed:\", error)\n      throw new Error(\"Invalid credentials\")\n    }\n  }\n\n  const logout = () => {\n    Cookies.remove(\"auth\")\n    setUser(null)\n    router.push(\"/\")\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAiBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;;IACtE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,6BAA6B;YAC7B,MAAM;oDAAY;oBAChB,IAAI;wBACF,MAAM,aAAa,wJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;wBAC/B,IAAI,YAAY;4BACd,MAAM,WAAW,KAAK,KAAK,CAAC;4BAC5B,QAAQ;wBACV;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,sBAAsB;wBACpC,wJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;oBACjB,SAAU;wBACR,aAAa;oBACf;gBACF;;YAEA;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,wCAAwC;YACxC,oCAAoC;YACpC,MAAM,OAAO;gBAAE;YAAM;YACrB,wJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,SAAS,CAAC,OAAO;gBAAE,SAAS;YAAE,GAAG,oBAAoB;;YAC9E,QAAQ;YACR,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM,SAAS;QACb,wJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;QACf,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;YAAQ;QAAU;kBAC3D;;;;;;AAGP;GAlDgB;;QACC,qIAAA,CAAA,YAAS;;;KADV;AAoDT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}}]
}